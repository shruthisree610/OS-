
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_DISK_SIZE 100

int disk[MAX_DISK_SIZE];  // 0 = free, 1 = occupied

typedef struct {
    char name[20];
    int start_block;
    int length;   // number of blocks (records)
} File;

File files[10];
int file_count = 0;

// Allocate contiguous blocks on disk
int allocate_contiguous(int length) {
    int count = 0;
    for (int i = 0; i < MAX_DISK_SIZE; i++) {
        if (disk[i] == 0) {
            count++;
            if (count == length) {
                // Found enough space ending at i
                return i - length + 1; // start block
            }
        } else {
            count = 0;
        }
    }
    return -1;  // no sufficient contiguous space
}

void create_file() {
    char fname[20];
    int length;

    printf("Enter file name: ");
    scanf("%s", fname);

    printf("Enter number of records (blocks) needed: ");
    scanf("%d", &length);

    if (length <= 0 || length > MAX_DISK_SIZE) {
        printf("Invalid length.\n");
        return;
    }

    int start = allocate_contiguous(length);
    if (start == -1) {
        printf("No contiguous space available to allocate the file.\n");
        return;
    }

    // Mark blocks as allocated
    for (int i = start; i < start + length; i++) {
        disk[i] = 1;
    }

    // Save file info
    strcpy(files[file_count].name, fname);
    files[file_count].start_block = start;
    files[file_count].length = length;
    file_count++;

    printf("File '%s' allocated from block %d to block %d\n", fname, start, start + length - 1);
}

void display_files() {
    if (file_count == 0) {
        printf("No files allocated yet.\n");
        return;
    }

    printf("\nFiles allocated:\n");
    for (int i = 0; i < file_count; i++) {
        printf("File: %s, Start Block: %d, Length: %d, Blocks: ", 
            files[i].name, files[i].start_block, files[i].length);
        for (int j = files[i].start_block; j < files[i].start_block + files[i].length; j++) {
            printf("%d ", j);
        }
        printf("\n");
    }
}

int main() {
    int choice;

    while(1) {
        printf("\n--- Contiguous File Allocation Simulation ---\n");
        printf("1. Create File\n");
        printf("2. Display Files\n");
        printf("3. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: create_file(); break;
            case 2: display_files(); break;
            case 3: exit(0);
            default: printf("Invalid choice.\n");
        }
    }
    return 0;
}
